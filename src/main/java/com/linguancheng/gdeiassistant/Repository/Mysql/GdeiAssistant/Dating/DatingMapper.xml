<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linguancheng.gdeiassistant.Repository.Mysql.GdeiAssistant.Dating.DatingMapper">

    <!-- 开启DatingMapper namespace下的二级缓存 -->
    <cache/>

    <resultMap id="DatingProfileResultMap" type="com.linguancheng.gdeiassistant.Pojo.Entity.DatingProfile">
        <id property="profileId" column="datingProfileProfileId"/>
        <result property="username" column="datingProfileUsername"/>
        <result property="kickname" column="datingProfileKickname"/>
        <result property="grade" column="datingProfileGrade"/>
        <result property="faculty" column="datingProfileFaculty"/>
        <result property="hometown" column="datingProfileHometown"/>
        <result property="content" column="datingProfileContent"/>
        <result property="qq" column="datingProfileQq"/>
        <result property="wechat" column="datingProfileWechat"/>
        <result property="area" column="datingProfileArea"/>
        <result property="state" column="datingProfileState"/>
    </resultMap>

    <resultMap id="DatingPickResultMap" type="com.linguancheng.gdeiassistant.Pojo.Entity.DatingPick">
        <id property="pickId" column="datingPickPickId"/>
        <result property="username" column="datingPickUsername"/>
        <result property="content" column="datingPickContent"/>
        <result property="state" column="datingPickState"/>
        <association property="datingProfile" resultMap="DatingProfileResultMap"/>
    </resultMap>

    <resultMap id="DatingMessageResultMap" type="com.linguancheng.gdeiassistant.Pojo.Entity.DatingMessage">
        <id property="messageId" column="datingMessageMessageId"/>
        <result property="username" column="datingMessageUsername"/>
        <result property="type" column="datingMessageType"/>
        <result property="state" column="datingMessageState"/>
        <association property="datingPick" resultMap="DatingPickResultMap"/>
    </resultMap>

    <select id="selectDatingProfilePage" resultType="com.linguancheng.gdeiassistant.Pojo.Entity.DatingProfile">
        select * from datingProfile where state=1 and area=#{area} limit #{start},#{size}
    </select>

    <select id="selectDatingProfileById" resultType="com.linguancheng.gdeiassistant.Pojo.Entity.DatingProfile">
        select * from datingProfile where profileId=#{profileId} limit 1
    </select>

    <select id="selectDatingProfileByUsername" resultType="com.linguancheng.gdeiassistant.Pojo.Entity.DatingProfile">
        select * from datingProfile where username=#{username}
    </select>

    <update id="updateDatingProfile">
        update datingProfile set kickname=#{kickname},grade=#{grade},faculty=#{faculty},hometown=#{hometown}
        ,condition=#{condition},qq=#{qq},wechat=#{wechat} where profileId=#{profileId}
    </update>

    <update id="updateDatingProfileState">
        update datingProfile set state=#{state} where profileId=#{profileId}
    </update>

    <insert id="insertDatingProfile" useGeneratedKeys="true" keyProperty="profileId">
        insert into datingProfile (username,kickname,area,grade,faculty,hometown,content,qq,wechat,state)
         values (#{username},#{kickname},#{area},#{grade},#{faculty},#{hometown},#{content},#{qq},#{wechat},1)
    </insert>

    <select id="selectDatingPick" resultType="com.linguancheng.gdeiassistant.Pojo.Entity.DatingPick">
        select * from datingPick where username=#{username} and profileId=#{profileId} order by pickId desc limit 1
    </select>

    <select id="selectDatingPickById" resultMap="DatingPickResultMap">
        select datingPick.pickId as datingPickPickId,datingProfile.profileId as datingProfileProfileId,
        datingPick.username as datingPickUsername,datingPick.content as datingPickContent,
        datingPick.state as datingPickState,datingProfile.username as datingProfileUsername
        from datingPick,datingProfile where datingPick.profileId=datingProfile.profileId and pickId=#{pickId} limit 1
    </select>

    <insert id="insertDatingPick" keyProperty="pickId" useGeneratedKeys="true">
        insert into datingPick (profileId,username,content,state) values (#{datingProfile.profileId},#{username},#{content},0)
    </insert>

    <update id="updateDatingPickState">
        update datingPick set state=#{state} where pickId=#{pickId}
    </update>

    <select id="selectUserDatingMessagePage" resultMap="DatingMessageResultMap">
        select messageId as datingMessageMessageId,datingMessage.username as datingMessageUsername,type as datingMessageType,datingMessage.state as datingMessageState,
        datingPick.pickId as datingPickPickId,datingPick.username as datingPickUsername,datingPick.content as datingPickContent,datingPick.state as datingPickState,
        datingProfile.username as datingProfileUsername,datingProfile.kickname as datingProfileKickname,datingProfile.profileId as datingProfileProfileId
        from datingMessage,datingPick,datingProfile
        where datingMessage.pickId=datingPick.pickId and datingPick.profileId=datingProfile.profileId
         and datingMessage.username=#{username} limit #{start},#{size}
    </select>

    <select id="selectUserUnReadDatingMessageCount" resultType="java.lang.Integer">
        select count(messageId) from datingMessage where username=#{username} and state=0
    </select>

    <insert id="insertDatingMessage">
        insert into datingMessage (username,pickid,type,state) values(#{username},#{datingPick.pickId},#{type},#{state})
    </insert>

    <update id="updateDatingMessageState">
        update datingMessage set state=#{state} where messageId=#{messageId}
    </update>

</mapper>