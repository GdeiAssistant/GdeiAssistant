<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.gdei.gdeiassistant.Repository.Mysql.GdeiAssistant.Dating.DatingMapper">

    <!-- 开启DatingMapper namespace下的二级缓存 -->
    <cache/>

    <resultMap id="DatingProfile" type="edu.gdei.gdeiassistant.Pojo.Entity.DatingProfile">
        <id property="profileId" column="profile_id"/>
        <result property="username" column="username"/>
        <result property="kickname" column="kickname"/>
        <result property="grade" column="grade"/>
        <result property="faculty" column="faculty"/>
        <result property="hometown" column="hometown"/>
        <result property="content" column="content"/>
        <result property="qq" column="qq"/>
        <result property="wechat" column="wechat"/>
        <result property="area" column="area"/>
        <result property="state" column="state"/>
    </resultMap>

    <resultMap id="DatingProfileResultMap" type="edu.gdei.gdeiassistant.Pojo.Entity.DatingProfile">
        <id property="profileId" column="datingProfileProfileId"/>
        <result property="username" column="datingProfileUsername"/>
        <result property="kickname" column="datingProfileKickname"/>
        <result property="grade" column="datingProfileGrade"/>
        <result property="faculty" column="datingProfileFaculty"/>
        <result property="hometown" column="datingProfileHometown"/>
        <result property="content" column="datingProfileContent"/>
        <result property="qq" column="datingProfileQq"/>
        <result property="wechat" column="datingProfileWechat"/>
        <result property="area" column="datingProfileArea"/>
        <result property="state" column="datingProfileState"/>
    </resultMap>

    <resultMap id="DatingPickResultMap" type="edu.gdei.gdeiassistant.Pojo.Entity.DatingPick">
        <id property="pickId" column="datingPickPickId"/>
        <result property="username" column="datingPickUsername"/>
        <result property="content" column="datingPickContent"/>
        <result property="state" column="datingPickState"/>
        <association property="datingProfile" resultMap="DatingProfileResultMap"/>
    </resultMap>

    <resultMap id="DatingMessageResultMap" type="edu.gdei.gdeiassistant.Pojo.Entity.DatingMessage">
        <id property="messageId" column="datingMessageMessageId"/>
        <result property="username" column="datingMessageUsername"/>
        <result property="type" column="datingMessageType"/>
        <result property="state" column="datingMessageState"/>
        <association property="datingPick" resultMap="DatingPickResultMap"/>
    </resultMap>

    <select id="selectDatingProfilePage" resultMap="DatingProfile">
        select * from dating_profile where state=1 and area=#{area} limit #{start},#{size}
    </select>

    <select id="selectDatingProfileById" resultMap="DatingProfile">
        select * from dating_profile where profile_id=#{profileId} limit 1
    </select>

    <select id="selectDatingProfileByUsername" resultMap="DatingProfile">
        select * from dating_profile where username=#{username}
    </select>

    <update id="updateDatingProfile">
        update dating_profile set kickname=#{kickname},grade=#{grade},faculty=#{faculty},hometown=#{hometown}
        ,condition=#{condition},qq=#{qq},wechat=#{wechat} where profile_id=#{profileId}
    </update>

    <update id="updateDatingProfileState">
        update dating_profile set state=#{state} where profile_id=#{profileId}
    </update>

    <insert id="insertDatingProfile" useGeneratedKeys="true" keyProperty="profile_id">
        insert into dating_profile (username,kickname,area,grade,faculty,hometown,content,qq,wechat,state)
         values (#{username},#{kickname},#{area},#{grade},#{faculty},#{hometown},#{content},#{qq},#{wechat},1)
    </insert>

    <select id="selectDatingPick" resultType="edu.gdei.gdeiassistant.Pojo.Entity.DatingPick">
        select * from dating_pick where username=#{username} and profile_id=#{profileId} order by pick_id desc limit 1
    </select>

    <select id="selectDatingPickById" resultMap="DatingPickResultMap">
        select dating_pick.pick_id as datingPickPickId,dating_profile.profile_id as datingProfileProfileId,
        dating_pick.username as datingPickUsername,dating_pick.content as datingPickContent,
        dating_pick.state as datingPickState,dating_profile.username as datingProfileUsername
        from dating_pick,dating_profile where dating_pick.profile_id=dating_profile.profile_id and pick_id=#{pickId} limit 1
    </select>

    <insert id="insertDatingPick" keyProperty="pick_id" useGeneratedKeys="true">
        insert into dating_pick (profile_id,username,content,state) values (#{datingProfile.profileId},#{username},#{content},0)
    </insert>

    <update id="updateDatingPickState">
        update dating_pick set state=#{state} where pick_id=#{pickId}
    </update>

    <select id="selectUserDatingMessagePage" resultMap="DatingMessageResultMap">
        select message_id as datingMessageMessageId,dating_message.username as datingMessageUsername,type as datingMessageType,dating_message.state as datingMessageState,
        dating_pick.pick_id as datingPickPickId,dating_pick.username as datingPickUsername,dating_pick.content as datingPickContent,dating_pick.state as datingPickState,
        dating_profile.username as datingProfileUsername,dating_profile.kickname as datingProfileKickname,dating_Profile.profile_id as datingProfileProfileId
        from dating_message,dating_pick,dating_profile
        where dating_message.pick_id=dating_pick.pick_id and dating_pick.profile_id=dating_profile.profile_id
         and dating_message.username=#{username} limit #{start},#{size}
    </select>

    <select id="selectUserUnReadDatingMessageCount" resultType="java.lang.Integer">
        select count(message_id) from dating_message where username=#{username} and state=0
    </select>

    <insert id="insertDatingMessage">
        insert into dating_message (username,pick_id,type,state) values(#{username},#{datingPick.pickId},#{type},#{state})
    </insert>

    <update id="updateDatingMessageState">
        update dating_message set state=#{state} where message_id=#{messageId}
    </update>

</mapper>